#
# Sample graphql-schema-to-jsii configuration file.
# This configuration will create types, mutation gql docs, and query gql docs for New Relic Dashboard entities
#

# Read the schema from a cached file
useCached: true
# Save the schema after reading
# Where to find the schema file
schemaFile: ./schema.gql
# URL of the GraphQL endpoint with introspection enabled
schemaUrl: "https://api.newrelic.com/graphql"
# License key required by the GraphQL endpoint
licenseKey: "YOUR_NEW_RELIC_LICENSE_KEY"
# Winston log level string: error |  warn | info | http | verbose | debug | silly
logLevel: debug
#
# Entities group CRUDL operations. Each entity is written to its own output file
#
entities:
  # Name of this group of entities. This is the output filename and the suffix for each operation
  - name: dashboards
    #
    # Create, Update, and Delete expect to be found as fields directly under RootMutationType
    #
    # Create mutation root name
    create: dashboardCreate
    # Update mutation root name
    update: dashboardUpdate
    # Delete mutation root name
    delete: dashboardDelete
    #
    # Read and List are a bit more complex
    # Read and List are configured as an array of FieldConfig, however at the top level they must have a SINGLE ENTRY. This is strictly enforced.
    #
    read:
      # The root field under RootQueryType, the name of the field in the schema.
      - name: actor
        # The Type of the field
        type: Actor
        # Whether or not to remove ALL of the type's fields EXCEPT for the fields listed as subfields. This helps with generated type explosion and namespace pollution
        prune: true
        # Recursively define the substructure of the Query
        subFields:
          - name: entity
            type: Entity
            prune: false
            subFields:
              - name: dashboardEntity
                type: DashboardEntity
                prune: false
                # if the subfield is actually a fragment reference this generates the correct gql output
                fragmentName: ... on DashboardEntity
    list:
      - name: actor
        type: Actor
        prune: true
        subFields:
          - name: entitySearch
            type: EntitySearch
            prune: false
            subFields:
              - name: results
                type: EntitySearchResult
                prune: false
                subFields:
                  - name: entities
                    type: EntityOutline
                    prune: false
                    subFields:
                      - name: dashboardEntityOutline
                        type: DashboardEntityOutline
                        prune: false
                        fragmentName: ... on DashboardEntityOutline
